code {
    color: #505050;
    background-color: #f2f2f2;
}

.container1{
    width: 300px;
    height:300px;
    margin: 0 auto;
    position:relative;
    overflow:hidden;
}

.planet{
    position:absolute;
    top:0;
    left:0;
    width:100%;
    height:100%;
    background:url(https://demo.tutorialzine.com/2013/10/css3-features-you-can-finally-use/assets/img/planet.png) no-repeat center center;
}

.rocket{
    position:absolute;
    top:0;
    left:0;
    width:100%;
    height:100%;
    background:url(https://demo.tutorialzine.com/2013/10/css3-features-you-can-finally-use/assets/img/rocket.png) no-repeat 50px center;

    /* Chrome still requires the -webkit- prefix */
    -webkit-animation:orbit 2s linear infinite;
    animation:orbit 2s linear infinite;

    transition:background-position 0.8s;
}

.container1:hover .rocket{
    background-position:80px center;
}

/* Define the keyframes of the animation */

@-webkit-keyframes orbit {
    from {
        -webkit-transform:rotate(0deg);}
    to {
        -webkit-transform:rotate(360deg);
    }
}

@keyframes orbit {
    from {
        transform:rotate(0deg);

        /* I am including the -webkit-transform properties, because
           Chrome might start supporting keyframe without prefix in the future,
           but we can't be certain whether it will support prefix-free transform
           at the same time */

        -webkit-transform:rotate(0deg);}
    to {
        transform:rotate(360deg);
        -webkit-transform:rotate(360deg);
    }
}


.container2{

    /* How pronounced should the 3D effects be */
    perspective: 800px;
    -webkit-perspective: 800px;

    background: radial-gradient(#e0e0e0, #aaa);
    width:480px;
    height:480px;
    margin:0 auto;
    border-radius:6px;
    position:relative;
}

.iphone-front,
.iphone-back{

    /* Enable 3D transforms */
    transform-style: preserve-3d;
    -webkit-transform-style: preserve-3d;

    /* We are using two separate divs for the front and back of the
       phone. This will hide the divs when they are flipped, so that the
       opposite side can be seen:  */

    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;

    width:200px;
    height:333px;

    position:absolute;
    top:50%;
    left:50%;
    margin:-166px 0 0 -100px;

    background:url(https://demo.tutorialzine.com/2013/10/css3-features-you-can-finally-use/assets/img/iphone.png) no-repeat left center;

    /* Animate the transitions */
    transition:0.8s;
}

.iphone-back{

    /* The back side is flipped 180 deg by default */
    transform:rotateY(180deg);
    -webkit-transform:rotateY(180deg);

    background-position:right center;
}

.container2:hover .iphone-front{
    /* When the container is hovered, flip the front side and hide it .. */
    transform:rotateY(180deg);
    -webkit-transform:rotateY(180deg);
}

.container2:hover .iphone-back{
    /* .. at the same time flip the back side into visibility */
    transform:rotateY(360deg);
    -webkit-transform:rotateY(360deg);
}

footer
{
    font-size: 75%;
    border-top: thin solid #5b5;
}
